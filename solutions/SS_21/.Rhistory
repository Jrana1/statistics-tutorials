1-(0.3+0.6-0.2)
# drinks only coffe
# P(C\T) = P(C)-P(C AND T)
0.6 - 0.2
# drinks only tea
# P(T\C) = P(T)-P(C AND T)
0.3 - 0.2
# b)
# P(C|T) = P(C AND T)/P(T)
0.2/0.3
# Task2
# X = number of persons traveling together among the selected persons
# Determine the density, expected value and variance of X
# 1 from hamburg, 1 from berlin, 3 frankfurt, 4 stuttgart
# density function: possible values for x = {0,2,3}
((choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))/choose(9,3)
# Task2
# X = number of persons traveling together among the selected persons
# Determine the density, expected value and variance of X
# 1 from hamburg, 1 from berlin, 3 frankfurt, 4 stuttgart
# density function: possible values for x = {0,2,3}
(choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))/choose(9,3)
(choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))/choose(9,3)
(choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))/
choose(9,3)
# Task2
# X = number of persons traveling together among the selected persons
# Determine the density, expected value and variance of X
# 1 from hamburg, 1 from berlin, 3 frankfurt, 4 stuttgart
# density function: possible values for x = {0,2,3}
x <- (choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))
y <- choose(9,3)
# Task2
# X = number of persons traveling together among the selected persons
# Determine the density, expected value and variance of X
# 1 from hamburg, 1 from berlin, 3 frankfurt, 4 stuttgart
# density function: possible values for x = {0,2,3}
x <- (choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))
y <- choose(9,3)
x <- (choose(3,1)+ choose(4,1) + choose(3,1)*choose(4,1)+ choose(3,1)*choose(4,1))
y <- choose(9,3)
x/y
x
x;y
# P(X = 3)
(choose(3,2)*choose(4,1)+choose(4,2)*choose(3,1))/choose(9,3)
# P(X = 3)
x3 <- (choose(3,2)*choose(4,1)+choose(4,2)*choose(3,1))/choose(9,3)
x0 <- x/y
# P(X= 2) = 1-P(x=3) - P(x=0)
1-x3-x0
# P(X= 2) = 1-P(x=3) - P(x=0)
x2 <- 1-x3-x0
x0+x3+x2
x0+x3+x2
# expected value
exp <- 0 * x0+ 2*x2 + 3*x3
exp
#variance
var <- ((0*x0)**2+(2*x2)**2+(3*x3)**2)- exp**2
var
# expected value  --> P(X=0),P(X=2) , P(X = 3),
# expected value =  0*P(x=0) + 2*P(x=2) + 3*P(x=3)
exp <- 0 * x0+ 2*x2 + 3*x3
exp
#variance
var <- (0**2*x0+(2**2*x2)+(3**2*x3))- exp**2
var
8/10*5/6*5/6
8/10*5/6*5/6 + 2/10
1-(8/10*1/6*1/6)
1-((8/10*1/6*5/6)+(8/10*5/6*1/6)+(8/10*1/6*1/6))
qnorm(0.5)
qnorm(c(0.025,0.975))
qnorm(c(0.025,0.975), 123, 15)
1-pnorm(550,mean = 4*123, sd = sqrt(4*(15)**2))
1-pnorm(550,mean = 4*123, sd = 4*15)
sd = 15
var = sd**2
var
1-pnorm(550, mean = 4*123, sd = sqrt(4*var))
1-pnorm(550, mean = 4*123, sd = 4**2*var))
1-pnorm(550, mean = 4*123, sd = sqrt(4**2*var))
qnorm(0.95, mean = 100*123, sd = sqrt(100**2*(sd**2)))
50000/123
tibble(
n = 1:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
)
library(tidyverse)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99) %>% max(n)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99) %>% filter(n==max(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99) %>% filter(n==min(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99) %>% filter(n==max(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>0.99) %>% filter(n==max(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99) %>% filter(n==max(n))
tibble(
n = 100:2000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99) %>% filter(n==max(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99) %>% filter(n==min(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99) %>% filter(n==max(n))
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p>=0.99)
tibble(
n = 100:1000,
p = pnorm(50000, n*123, sd =sqrt(n**2*(sd**2)))
) %>% filter(p<=0.99)
